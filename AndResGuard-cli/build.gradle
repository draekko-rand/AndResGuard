apply plugin: 'java'

[compileJava, compileTestJava, javadoc]*.options*.encoding = 'UTF-8'

version rootProject.ext.VERSION_NAME
group rootProject.ext.GROUP

dependencies {
  implementation fileTree(dir: 'libs', include: ['*.jar'])
  //compile group: 'com.tencent.mm', name: 'AndResGuard-core', version: version
  implementation 'org.conscrypt:conscrypt-openjdk-uber:2.5.2'
  implementation 'com.android.tools.build:apksig:8.0.0-alpha11'
  implementation 'commons-io:commons-io:2.11.0'
  implementation project(':AndResGuard-core')
}

sourceSets {
  main {
    java {
      srcDir 'src'
    }
  }
}


jar {
  exclude('META-INF/*.RSA', 'META-INF/*.DSA', 'META-INF/*.SF', 'META-INF/*.MF')
  manifest {
    attributes 'Main-Class': 'com.tencent.mm.resourceproguard.cli.CliMain'
    attributes 'Manifest-Version': archiveVersion
    attributes "Jar-Version": "${ANDRESGUARD_VERSION}"
    attributes "Build-Time": releaseTime()
  }
  from {
    configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) }
  }
}

// copy the jar to work directory
task buildJar(type: Copy, dependsOn: [build, jar]) {
  from('build/libs') {
    include '*' + version + '*.jar'
  }
  into('../tool_output')
}

def releaseTime() {
  return new Date().format("yyyy-MM-dd HH:mm ZZZ", TimeZone.getDefault())
}

defaultTasks 'buildJar'
